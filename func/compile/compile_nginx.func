#!/bin/bash

# Compile services of nginx function
compile_nginx()
{
    local config_action=${1:-None}
    clean_tmp

    local module="nginx"
    local version="${nginx_version}"
    local logfile=""${install_log_dir}"/"${module}".log"
    if [ ! -f "${packets_dir}/${module}-${version}.tar.gz" ];
    then
        echo -n "The file `get_color "${packets_dir}/${module}-${version}.tar.gz" UNDERLINE` not exists ... "
        get_exit_code 1 0
        return
    fi
    cp -a "${packets_dir}"/"${module}"-"${version}".tar.gz "${tmp_dir}"
    cp -a "${libs_dir}"/pcre-"${libs_pcre_version}".tar.bz2 "${tmp_dir}"
    cd "${tmp_dir}"

    tar xf "${module}"-"${version}".tar.gz
    tar xf pcre-"${libs_pcre_version}".tar.bz2
    cd "${module}"-"${version}"
    echo -n "Compile `get_color "${module}"-"${version}" CYANBLUE` to `get_color "${install_dir_prefix}" UNDERLINE` ... "
    if [ "${version%.*}" == '1.6' ];
    then
        ./configure --prefix="${install_dir_prefix}"/"${module}"-"${version}" --with-http_gzip_static_module --with-http_ssl_module --with-pcre="${tmp_dir}"/pcre-"${libs_pcre_version}" --with-http_realip_module --with-http_sub_module --with-http_stub_status_module --with-mail_ssl_module --without-http_scgi_module --without-http_uwsgi_module > "${logfile}" 2>&1
    elif [ "${version%.*}" == '1.8' ];
    then
        ./configure --prefix="${install_dir_prefix}"/"${module}"-"${version}" --with-http_gzip_static_module --with-http_ssl_module --with-pcre="${tmp_dir}"/pcre-"${libs_pcre_version}" --with-http_realip_module --with-http_sub_module --with-http_stub_status_module --with-mail_ssl_module --with-threads --without-http_scgi_module --without-http_uwsgi_module > "${logfile}" 2>&1
    else
        ./configure --prefix="${install_dir_prefix}"/"${module}"-"${version}" --with-http_gzip_static_module --with-http_ssl_module --with-pcre="${tmp_dir}"/pcre-"${libs_pcre_version}" --with-http_realip_module --with-http_sub_module --with-http_stub_status_module --with-mail_ssl_module --without-http_scgi_module --without-http_uwsgi_module > "${logfile}" 2>&1
    fi
    make >> "${logfile}" 2>&1
    make install >> "${logfile}" 2>&1
    get_exit_code $? 1

    # configuration
    if [ "${config_action}" = "auto_config" ];
    then
        "${AUTO_CONFIG_SH}" -t "${module}"
    fi

    clean_tmp
}
