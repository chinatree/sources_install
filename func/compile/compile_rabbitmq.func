#!/bin/bash

# Compile services of rabbitmq function
compile_rabbitmq()
{
    local config_action=${1:-None}
    clean_tmp

    local module="rabbitmq"
    local version="${rabbitmq_version}"
    local packet_file="${packets_dir}/${module}-server-${version}.tar.gz"
    local logfile="${install_log_dir}/${module}.log"
    if [ ! -f "${packet_file}" ];
    then
        echo -n "The file `get_color "${packet_file}" UNDERLINE` not exists ... "
        get_exit_code 1 0
        return
    fi
    cp -a "${packet_file}" "${tmp_dir}"
    cd "${tmp_dir}"

    tar xf "${packet_file}"
    cd "${module}-server-${version}"
    echo -n "Compile `get_color "${module}"-"${version}" CYANBLUE` to `get_color "${install_dir_prefix}" UNDERLINE` ... "
    make > "${logfile}" 2>&1
    #make TARGET_DIR="${install_dir_prefix}/${module}-${version}" SBIN_DIR="${install_dir_prefix}/${module}-${version}/sbin" MAN_DIR="${install_dir_prefix}/${module}-${version}/man" DOC_INSTALL_DIR="${install_dir_prefix}/${module}-${version}/doc" install >> "${logfile}" 2>&1
    make TARGET_DIR="${install_dir_prefix}/${module}-${version}" SBIN_DIR="${install_dir_prefix}/${module}-${version}/sbin" MAN_DIR="${install_dir_prefix}/${module}-${version}/man" install >> "${logfile}" 2>&1
    get_exit_code $? 0

    # configuration
    if [ "${config_action}" = "auto_config" ];
    then
        "${AUTO_CONFIG_SH}" -t "${module}"
    fi

    clean_tmp
}
