#!/bin/bash

# Compile services of luarocks function
compile_luarocks()
{
    local config_action=${1:-None}
    clean_tmp

    local module="luarocks"
    local version="${luarocks_version}"
    local logfile="${install_log_dir}/${module}.log"
    local cpu_core_num="${CPU_CORE_NUM:-1}"
    if [ ! -f "${packets_dir}/${module}-${version}.tar.gz" ];
    then
        echo -n "The file `get_color "${packets_dir}/${module}-${version}.tar.gz" UNDERLINE` not exists ... "
        get_exit_code 1 0
        return
    fi
    cp -a "${packets_dir}/${module}-${version}.tar.gz" "${tmp_dir}"
    cd "${tmp_dir}"

    tar xf "${module}-${version}.tar.gz"
    cd "${module}"-"${version}"
    echo -n "Compile `get_color "${module}"-"${version}" CYANBLUE` to `get_color "${install_dir_prefix}" UNDERLINE` ... "
    ./configure --prefix="${install_dir_prefix}/${module}-${version}" --with-lua="${install_dir_prefix}/openresty/luajit" > "${logfile}" 2>&1
    # ./configure --prefix="${install_dir_prefix}/${module}-${version}" --with-lua="${install_dir_prefix}/openresty/luajit" --with-lua-include="${install_dir_prefix}/openresty/luajit/include/luajit-2.1" > "${logfile}" 2>&1
    make -j "${cpu_core_num}" >> "${logfile}" 2>&1
    make install >> "${logfile}" 2>&1
    get_exit_code $? 1

    # configuration
    if [ "${config_action}" = "auto_config" ];
    then
        "${AUTO_CONFIG_SH}" -t "${module}"
    fi

    clean_tmp
}
